1. 新建类的时候加上文件元数据，方便维护的时候遇到问题直接找到本人，最简单的元数据可由类名、类说明、作者三者组成，可以通过VA插件生成

/*!
 * \class LoginManager
 *
 *
 * \brief 
 *   
 *  登录过程的管理对象，该类主要用来维护登录过程状态的数据维护
 *
 * \author wenxinzhou
 *
 *
 *
 */
 
2. 代码的逻辑清晰是首要要求，力求简单易懂，避免为了炫技的封装和抽象，如 c++ 的auto自动类型推导不能滥用
 
3. 保持原子性的提交，即修复bug的时候原则上一个bug一个提交，不允许一个提交混着几个bug的修复

4. 不允许提交消息为空，提交消息模板如下
【提交类型】:BUG/新功能/需求修改/代码整理/解决编译不过/阶段性提交/追加递交
【问题描述】:该单的描述，可以是jira上bug的描述或者从功能性对本次修改的描述
【受影响功能】：
【相关单号】:无
【审核人】：
【需要测试】:是/否

5.提交前需自测通过，代码的实现要符合设计文档的功能要求和UI文档的要求

6.对代码关键路径一定要打日志，如上传下载失败、调用cad接口等等

7.调用cad的接口的地方加些注释，简要描述下调用该接口是做什么的

8.对于偶现或者为了绕开某些坑而加的代码要加上代码注释和bug单号（有单号情况下）,对于未完善或者可以优化的地方可以加上 //TODO

9.对代码一定要格式化
  选中要格式化的代码或者ctrl+A选中整个文件，接着Ctrl+K+F格式化
  
9.包含特定系统的头文件或者函数的时候要加上系统相关宏Q_OS_XX
  如要加window.h,不能简单#include<window.h>,应该写成
  #ifdef Q_OS_WIN
  #include<window.h>
  #endif
  
10.包含qt的头文件一定要注意大小写 #include<QObject> 不要写成#include<qobject>
  
11.指针的使用不能心存侥幸，一定要做判空操作，对于除数操作一定要做非0判断

12.子类重写父类的虚函数的时候在函数声明的时候加上override

13.一定要看编译警告和运行警告，如qt connect函数连接了已不存在的信号槽函数、样式表解释失败、if语句中=和==是否搞混了

14.函数里不要写出if层数超过3层的，多想想能不能用early return的方式优化

15.函数参数如果是传引用时候，如果在函数内部不涉及修改引用的变量一定要加上const，否则在跨平台编译不通过，如
   void func(A &a);
   调用：func(A()) 在Visual studio可以编译通过，在mac clang下不行
   应修改为 void func(const A &a);
   
16.函数实现超过100行的，要考虑拆解成更小粒度的多个函数

16.相同代码块不应该重复出现，如有要考虑封装成公共函数或者公共类

17.写new来分配对象的时候必须确保有对应的内存释放代码，或者交由QObject父子关系树动态管理，同时要注意的是在栈上分配的对象交由QObject的父子关系树上管理会有潜在的问题，
比较典型的是模态对话框的使用容易犯的错误
 A::func()
 {
     XMessageBox b(this); //模态对话框
	 b.exec();
 }
 
 假设目前b正在显示还未关闭，此时如果A的对象在外部被释放了，根据父子关系的内存释放特点，在A析构的时候会delete b 导致本来是栈分配的内存会被当成堆内存释放